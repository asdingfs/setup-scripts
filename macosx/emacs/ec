#!/bin/zsh

. $HOME/.zshenv
# Note: X windows are referred as frames, since for emacs a window is a split of a frame. This script is called ec.
# The part help.
# If I type in help, or -h... I get something at least.
if [[ "$1" == "--help" ]] || [[ "$1" == "-h" ]]; then
    echo "A dumb script to deal with Emacs Client Frame"
    echo "Open a file in the existing frame or create a frame if none"
    echo "If multiple frames are open, the file will be opened in the last focused frame"
    echo ""
    echo "usage: ec <name of file> [w]"
    echo " — \"w\" forces the creation of a frame even if there is already one"
    exit
fi

# open server in background if not yet started
if ! emacsclient -q -a false -e 't' 1> /dev/null
then
    echo "Restarting emacs server..."
    es
fi

# Now the meat part.
# We use the command emacsclient. Get the state of the emacsclient, ‘nil’ if no frame is opened and ‘t’ if a is frame is opened
# If the server is off OR if there is no frame already opened OR if we explicitly ask for a frame using the suffix "w"
state="$(emacsclient -qn -e "(if (> (length (frame-list)) 1) 't)")"
# if no extra argument is supplied
if [[ "$state" == "" ]] || [[ "$state" == "nil" ]] || [[ "$2" == "w" ]]
then
    if [[ $# -eq 0 ]]; then
        echo "Creating frame & running (magit-on-init-dir)..."
        # Create a frame and run (magit-on-init-dir) function
        emacsclient -a "" -cqnu -e "(magit-on-init-dir)"
    else
        # Create a frame and open the file within it
        emacsclient -a "" -cqn $1
    fi
else
    # if no argument is supplied
    if [[ $# -eq 0 ]]; then
        echo "Raising existing frame..."
        # Toggle frame visibility, i.e. if not frontmost bring to front, otherwise hide frame
        osascript "$HOME/.emacs.d/.files.d/emacs/Emacs Toggle.app"
    else
         # Open the file in the existing frame
        emacsclient -qn $1 -e "(frame-visible-p (selected-frame))"
    fi
fi
